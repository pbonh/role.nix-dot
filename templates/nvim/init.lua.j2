-- Set Python Path
vim.g.python3_host_prog = '{{ nix_bin }}/nvim-python3'

-- Load Plugins
require("plugins")

-- Set Shell
vim.o.shell = "{{ nvim_shell }}"

-- Enable Filetype-specific Settings
vim.cmd [[
  filetype plugin on
  au BufRead,BufNewFile *.lua.j2 set filetype=lua
  au BufRead,BufNewFile *.yaml.j2 set filetype=yaml
  au BufRead,BufNewFile *.yml.j2 set filetype=yaml
]]

-- Set Editor
-- vim.env.GIT_EDITOR = "{{ nix_bin }}/nvr -cc split --remote-wait +'set bufhidden=wipe'"
-- vim.env.EDITOR = "{{ nix_bin }}/nvr -cc split --remote-wait +'set bufhidden=wipe'"

-- Cursorline
-- vim.g.cursorline_timeout = 100
vim.wo.cursorline = true

-- Set highlight on search
vim.o.hlsearch = true

-- Tab/Space/Indent Settings
vim.o.breakindent = true
vim.o.autoindent = true

-- Timeout Length
vim.o.timeoutlen = 100

-- Set Scrollbar
require("scrollbar").setup()
require("scrollbar.handlers.search").setup()

-- UI Settings
vim.wo.relativenumber = true
vim.wo.number = true
vim.wo.wrap = false

-- Enable mouse mode
vim.o.mouse = 'a'

-- Save undo history
vim.opt.undofile = true

-- Case insensitive searching UNLESS /C or capital in search
vim.o.ignorecase = true
vim.o.smartcase = true

-- Decrease update time
vim.o.updatetime = 250
vim.wo.signcolumn = 'yes'

-- Set colorscheme
vim.opt.termguicolors = true
vim.o.background = "dark"
vim.cmd([[colorscheme gruvbox-material]])

-- Treesitter Settings
require('user_treesitter')

-- Set statusbar
require('user_statusline')

-- Set Quickfix
require('user_quickfix')

-- Enable Comment.nvim
require('Comment').setup()

-- Highlight on yank
vim.cmd [[
  augroup YankHighlight
    autocmd!
    autocmd TextYankPost * silent! lua vim.highlight.on_yank()
  augroup end
]]

-- Map blankline
vim.g.indent_blankline_char = 'â”Š'
vim.g.indent_blankline_filetype_exclude = { 'help', 'packer' }
vim.g.indent_blankline_buftype_exclude = { 'terminal', 'nofile' }
vim.g.indent_blankline_show_trailing_blankline_indent = false

-- Git Setup
require('user_git')

-- Telescope
require('user_telescope')

-- nvim-cmp setup
require('user_completion')

-- LuaSnip setup
require('user_snippet')

-- DAP settings
require('user_dap')

-- Startup Settings
require('startup_nvim')

-- Project Settings
require('user_project')

-- Task Settings
require('user_tasks')

-- Ranger/Rnvimr Settings
-- require('user_rnvimr')

-- File Manager Settings
require('user_fm')

-- Terminal Settings
require('user_terminal')

-- Neorg Settings
require('user_neorg')
vim.g.glow_binary_path = "{{ nix_bin }}"
vim.g.glow_border = "rounded"
vim.g.glow_use_pager = true

-- Neoformat Settings
-- require('user_neoformat')

-- User Language Plugin Settings
require('user_languages')

-- User Refactoring Plugin Settings
require('user_refactoring')

-- User Sidebar Plugin Settings
require('user_sidebar')

-- Marks Plugin
require("marks").setup{}

-- WinShift
require('user_window')

-- Hydra
require('user_hydra')

-- LSP settings
require('user_lsp')

-- Main Keymaps
require('user_keymaps')

-- Leap Plugin Settings
require('leap').set_default_keymaps(true)

{% if nvim_test_enable %}
require('user_test')
{% else %}
-- No Testing Plugins Enabled
{% endif %}

-- Last Minute Config

-- Extra Config
{{ extra_nvim_lua_settings_file or "-- No Extra Neovim Lua Settings" }}

-- vim: ts=2 sts=2 sw=2 et
