-- FZF Config
local actions = require "fzf-lua.actions"
require'fzf-lua'.setup {
  -- provider setup
  files = {
    actions = {
      ["ctrl-x"]      = actions.file_split,
    }
  },
  git = {
    bcommits = {
      actions = {
        ["ctrl-x"]  = actions.git_buf_split,
      },
    },
  },
  grep = {
    actions = {
      ["ctrl-x"]      = actions.file_split,
    }
  },
  buffers = {
    actions = {
      ["ctrl-x"]      = actions.buf_split,
      ["ctrl-d"]      = actions.buf_del,
    }
  },
  blines = {
    actions = {
      ["ctrl-x"]      = actions.buf_split,
    }
  },
}

-- Toggleterm Config
require("toggleterm").setup{
  -- size can be a number or function which is passed the current terminal
--size = 20
  function(term)
    if term.direction == "horizontal" then
      return 15
    elseif term.direction == "vertical" then
      return vim.o.columns * 0.4
    end
  end,
  open_mapping = [[<c-_>]],
  hide_numbers = true, -- hide the number column in toggleterm buffers
  shade_filetypes = {},
  shade_terminals = true,
  shading_factor = '1', -- the degree by which to darken to terminal colour, default: 1 for dark backgrounds, 3 for light
  start_in_insert = true,
  insert_mappings = true, -- whether or not the open mapping applies in insert mode
  persist_size = true,
  direction = 'vertical',
  close_on_exit = true, -- close the terminal window when the process exits
  shell = vim.o.shell, -- change the default shell
  -- This field is only relevant if direction is set to 'float'
--float_opts = {
--  -- The border key is *almost* the same as 'nvim_open_win'
--  -- see :h nvim_open_win for details on borders however
--  -- the 'curved' border is a custom border type
--  -- not natively supported but implemented in this plugin.
--  border = 'single' | 'double' | 'shadow' | 'curved' | ... other options supported by win open
--  width = <value>,
--  height = <value>,
--  winblend = 3,
--  highlights = {
--    border = "Normal",
--    background = "Normal",
--  }
--}
}

function _G.set_terminal_keymaps()
  local opts = {noremap = true}
  vim.api.nvim_buf_set_keymap(0, 't', '<esc>', [[<C-\><C-n>]], opts)
  vim.api.nvim_buf_set_keymap(0, 't', '<C-]>', [[<C-\><C-n>]], opts)
  vim.api.nvim_buf_set_keymap(0, 't', '<C-h>', [[<C-\><C-n><C-W>h]], opts)
  vim.api.nvim_buf_set_keymap(0, 't', '<C-j>', [[<C-\><C-n><C-W>j]], opts)
  vim.api.nvim_buf_set_keymap(0, 't', '<C-k>', [[<C-\><C-n><C-W>k]], opts)
  vim.api.nvim_buf_set_keymap(0, 't', '<C-l>', [[<C-\><C-n><C-W>l]], opts)
end

-- if you only want these mappings for toggle term use term://*toggleterm#* instead
vim.cmd('autocmd! TermOpen term://*toggleterm#* lua set_terminal_keymaps()')

-- Neorg/Treesitter Config
local parser_config = require "nvim-treesitter.parsers".get_parser_configs()
parser_config.norg = {
    install_info = {
        url = "https://github.com/nvim-neorg/tree-sitter-norg",
        files = { "src/parser.c", "src/scanner.cc" },
        branch = "main"
    },
}

require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
    disable = {},
  },
  ensure_installed = {
    "norg",
    "haskell",
    "c",
    "cpp",
    "json",
    "yaml",
    "rust"
  },
}

-- Neorg Config
require('neorg').setup {
  -- Tell Neorg what modules to load
  load = {
      ["core.defaults"] = {}, -- Load all the default modules
      ["core.norg.concealer"] = {}, -- Allows for use of icons
      ["core.norg.dirman"] = { -- Manage your directories with Neorg
          config = {
              workspaces = {
                  my_workspace = "{{ code_checkout_path }}"
              }
          }
      }
  },
}

-- Auto-Session Settings
-- require('auto-session').setup {
--     auto_session_enable_last_session=true,
-- }
vim.o.sessionoptions="blank,buffers,curdir,folds,help,options,tabpages,winsize,resize,winpos,terminal"
require('session-lens').setup {
  path_display = {'shorten'},
  previewer = true
}
require("telescope").load_extension("session-lens")

-- DAP Settings
require("dapui").setup()
{{ dap_plugin_settings_file or "-- No DAP Languages Configured" }}

-- Extra Plugin Settings
{{ extra_lua_plugin_settings_file or "-- No Extra Languages Configured" }}
