  set rtp+=~/.fzf
  let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6 } }

  command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, fzf#vim#with_preview({'options': ['--layout=reverse', '--info=inline']}), <bang>0)
  nnoremap <leader>f :Files<cr>
  nnoremap <leader>b :Buffers<cr>

  function! RipgrepFzf(query, fullscreen)
    let command_fmt = '{{ nix_bin }}/rg --column --line-number --no-heading --color=always --smart-case %s || true'
    let initial_command = printf(command_fmt, shellescape(a:query))
    let reload_command = printf(command_fmt, '{q}')
    let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
    call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)
  endfunction
  command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)
  command! -nargs=* -bang RGCWord call RipgrepFzf(expand('<cword>'), <bang>0)
  nnoremap <C-q> :RG<cr>
  nnoremap _ :RGCWord<cr>

  nnoremap : :Commands<cr>

  function! s:fzf_sink(what)
      let p1 = stridx(a:what, '<')
      if p1 >= 0
          let name = strpart(a:what, 0, p1)
          let name = substitute(name, '^\s*\(.\{-}\)\s*$', '\1', '')
          if name != ''
              exec "AsyncTask ". fnameescape(name)
          endif
      endif
  endfunction

  function! s:fzf_task()
      let rows = asynctasks#source(&columns * 48 / 100)
      let source = []
      for row in rows
          let name = row[0]
          let source += [name . '  ' . row[1] . '  : ' . row[2]]
      endfor
      let opts = { 'source': source, 'sink': function('s:fzf_sink'),
                  \ 'options': '+m --nth 1 --inline-info --tac' }
      if exists('g:fzf_layout')
          for key in keys(g:fzf_layout)
              let opts[key] = deepcopy(g:fzf_layout[key])
          endfor
      endif
      call fzf#run(opts)
  endfunction

  command! -nargs=0 AsyncTaskFzf call s:fzf_task()
  nnoremap <leader>t :AsyncTaskFzf<cr>

" function! SelectTargetFloat(...)
"     return fzf#run({
"                 \ 'source': cmake4vim#GetAllTargets(),
"                 \ 'options': '+m -n 1 --prompt CMakeTarget\>\ ',
"                 \ 'window': { 'width': 0.9, 'height': 0.6 },
"                 \ 'sink':    function('cmake4vim#SelectTarget')})
" endfunction
" command! -bang -nargs=* FZFCMakeSelectTargetFloat call SelectTargetFloat(<q-args>, <bang>0)
" nnoremap <C-q> :FZFCMakeSelectTargetFloat<cr>

