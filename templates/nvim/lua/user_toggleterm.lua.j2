-- Floaterm Config
vim.g.floaterm_width = 0.9
vim.g.floaterm_height = 0.9
vim.g.floaterm_position = 'center'
vim.g.floaterm_autoclose = 1
vim.g.floaterm_autoinsert = true
vim.g.floaterm_opener = 'tabe'
vim.g.floaterm_keymap_toggle = '<C-\\>'
vim.cmd [[hi FloatermBorder guibg=gray guifg=black]]
vim.cmd [[hi FloatermNC guibg=gray]]
-- vim.g.fzf_floaterm_newentries = {
--   \ '+lazygit' : {
--     \ 'title': 'Lazygit',
--     \ 'cmd': '{{ nix_bin }}/lazygit' },
--   \ '+grv' : {
--     \ 'title': 'GRV',
--     \ 'cmd': '{{ nix_bin }}/grv' },
--   \ '+zsh' : {
--     \ 'title': 'Zsh Shell',
--     \ 'cmd': '{{ nix_bin }}/zsh' },
--   \ '+ranger' : {
--     \ 'title': 'Ranger File Manager',
--     \ 'cmd': '{{ nix_bin }}/ranger' },
--   \ '+broot' : {
--     \ 'title': 'Broot File Manager',
--     \ 'cmd': '{{ nix_bin }}/broot' },
--   \ '+pwsh' : {
--     \ 'title': 'Powershell',
--     \ 'cmd': 'pwsh' }
--   \ }

-- Toggleterm Config
require("toggleterm").setup{
  size = function(term)
    if term.direction == "horizontal" then
      return 25
    elseif term.direction == "vertical" then
      return vim.o.columns * 0.4
    end
  end,
  open_mapping = [[<c-_>]],
  hide_numbers = true,
  shade_filetypes = {},
  shade_terminals = true,
  shading_factor = '1',
  start_in_insert = true,
  insert_mappings = true, -- whether or not the open mapping applies in insert mode
  persist_size = true,
  direction = 'horizontal',
  close_on_exit = true,
  shell = vim.o.shell,
  float_opts = {
    border = 'curved',
    width = 140,
    height = vim.o.lines * 60,
    winblend = 3,
    highlights = {
      border = "Normal",
      background = "Normal",
    }
  }
}

-- FTerm Config
require'FTerm'.setup({
    border = 'double',
    dimensions  = {
        height = 1.0,
        width = 1.0,
    },
})

local fterm = require("FTerm")
local btop = fterm:new({
    ft = 'fterm_btop',
    cmd = "btop",
})
 -- Use this to toggle btop in a floating terminal
function _G.__fterm_btop()
    btop:toggle()
end

-- {% for nvim_fterm_cmd in nvim_fterm_cmds %}
-- vim.api.nvim_add_user_command('{{ nvim_fterm_cmd.cmd_name }}', function() require('FTerm').run('{{ nvim_fterm_cmd.cmd_str }}') end, { bang = true })
-- {% endfor %}
